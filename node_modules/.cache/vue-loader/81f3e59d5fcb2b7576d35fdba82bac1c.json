{"remainingRequest":"E:\\项目\\SKWMS\\wms-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\项目\\SKWMS\\wms-ui\\src\\components\\page-content\\inventory\\InventorySearchView.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\项目\\SKWMS\\wms-ui\\src\\components\\page-content\\inventory\\InventorySearchView.vue","mtime":1585370815952},{"path":"E:\\项目\\SKWMS\\wms-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\项目\\SKWMS\\wms-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\项目\\SKWMS\\wms-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\项目\\SKWMS\\wms-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport SearchCardLayout from \"@/components/layout-component/SearchCardLayout\";\nimport EcUtil from \"@/util/EcUtil\";\nimport InventoryModel from \"@/project/model/InventoryModel\";\nimport PaginateModel from \"@/project/model/PaginateModel\";\nimport Api from \"@/assets/api/Api\";\nimport WarehouseSelector from \"@/components/page-content/enum-selector/WarehouseSelector\";\nimport ElButtonMini from \"@/components/common/button/ElButtonMini\";\nimport TablePanel from \"@/components/layout-component/TablePanel\";\n\nexport default {\n    name: \"InventorySearchView\",\n    components: {TablePanel, ElButtonMini, WarehouseSelector, SearchCardLayout},\n    props: {},\n    data() {\n        return {\n            loading: false,\n            showAddDialog: false,\n            filterForm: new InventoryModel(),\n            data: [],\n            paginate: new PaginateModel(this.refreshData),\n            selectedRow: [],\n            sortingColumn: null,\n            editId: 0,\n        }\n    },\n    mounted() {\n        this.reload();\n    },\n    methods: {\n        reload() {\n            this.refreshData();\n        },\n        refreshData() {\n            this.loading = true;\n            this.$ajax.request(Api.inventory.list, {\n                ...EcUtil.getSortField(this.sortingColumn),\n                ...this.paginate.getJSON(),\n                ...this.filterForm\n            }).then(resp => {\n                this.data = resp.list;\n                this.paginate.setPaginate(resp);\n            }).finally(() => this.loading = false)\n        },\n\n        sortChange(nodes) {\n            this.sortingColumn = nodes;\n            this.refreshData();\n        },\n\n        clickAddButton() {\n            this.editId = 0;\n            this.showAddDialog = true;\n        },\n        clickEditButton() {\n            this.editId = this.selectedRow[0].id;\n            this.showAddDialog = true;\n        },\n        clickDeleteButton() {\n            this.delete(this.selectedRow);\n        },\n        clickRowEditButton(row) {\n            this.editId = row.id;\n            this.showAddDialog = true;\n        },\n        clickRowDeleteButton(row) {\n            this.delete([row]);\n        },\n\n        warehouseChange(nodes) {\n            let l = nodes.length;\n            this.filterForm.warehouseId = l > 0 ? nodes[0] : 0;\n            this.filterForm.reservoirId = l > 1 ? nodes[1] : 0;\n            this.filterForm.stockId = l > 2 ? nodes[2] : 0;\n        }\n\n    },\n    watch: {},\n    computed: {},\n\n}\n",{"version":3,"sources":["InventorySearchView.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA","file":"InventorySearchView.vue","sourceRoot":"src/components/page-content/inventory","sourcesContent":["<template>\r\n    <div class=\"InventorySearchView flex-box flex-column\">\r\n        <search-card-layout\r\n                @click-search=\"refreshData\"\r\n        >\r\n            <div class=\"flex-box search-card\">\r\n                <div class=\"\">\r\n                    <span>物料名称</span>\r\n                    <el-input v-model=\"filterForm.materialName\"></el-input>\r\n                </div>\r\n                <div class=\"\">\r\n                    <span>仓库货架</span>\r\n                    <warehouse-selector\r\n                            :is-filter=\"true\"\r\n                            :level=\"3\"\r\n                            @change=\"warehouseChange\"\r\n                    ></warehouse-selector>\r\n                </div>\r\n            </div>\r\n        </search-card-layout>\r\n        <div class=\"flex-grow\">\r\n            <table-panel\r\n                    :loading=\"loading\"\r\n                    :data=\"data\"\r\n                    :paginate=\"paginate\"\r\n                    operate-width=\"80\"\r\n                    :selectedRow.sync=\"selectedRow\"\r\n                    @sort-change=\"sortChange\"\r\n                    :create-user-show=\"true\"\r\n                    :update-user-show=\"true\"\r\n                    :show-all-warehouse=\"true\"\r\n                    :operate-show=\"false\"\r\n                    :show-selection=\"false\"\r\n            >\r\n                <el-table-column\r\n                        prop=\"id\"\r\n                        label=\"ID\"\r\n                        sortable=\"custom\"\r\n                        width=\"80\"\r\n                ></el-table-column>\r\n\r\n                <el-table-column\r\n                        prop=\"materialId\"\r\n                        label=\"物料编号\"\r\n                        sortable=\"custom\"\r\n                        width=\"120\"\r\n                >\r\n                    <template slot-scope=\"{row}\">{{ row.materialCode }}</template>\r\n                </el-table-column>\r\n\r\n                <el-table-column\r\n                        prop=\"materialId\"\r\n                        label=\"物料名称\"\r\n                        sortable=\"custom\"\r\n                        width=\"120\"\r\n                >\r\n                    <template slot-scope=\"{row}\">{{ row.materialName }}</template>\r\n                </el-table-column>\r\n\r\n                <el-table-column\r\n                        prop=\"quantity\"\r\n                        label=\"库存数量\"\r\n                        sortable=\"custom\"\r\n                        width=\"120\"\r\n                ></el-table-column>\r\n\r\n                <el-table-column\r\n                        prop=\"mtlUnitName\"\r\n                        label=\"单位\"\r\n                        sortable=\"custom\"\r\n                        width=\"80\"\r\n                ></el-table-column>\r\n\r\n                <template slot=\"operate\" slot-scope=\"{row}\">\r\n                    <el-button-mini\r\n                            type=\"text\"\r\n                            icon=\"edit\"\r\n                            @click.native=\"clickRowEditButton(row)\"\r\n                    ></el-button-mini>\r\n                    <el-button-mini\r\n                            type=\"text\"\r\n                            icon=\"delete\"\r\n                            @click.native=\"clickRowDeleteButton(row)\"\r\n                    ></el-button-mini>\r\n                </template>\r\n            </table-panel>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import SearchCardLayout from \"@/components/layout-component/SearchCardLayout\";\r\n    import EcUtil from \"@/util/EcUtil\";\r\n    import InventoryModel from \"@/project/model/InventoryModel\";\r\n    import PaginateModel from \"@/project/model/PaginateModel\";\r\n    import Api from \"@/assets/api/Api\";\r\n    import WarehouseSelector from \"@/components/page-content/enum-selector/WarehouseSelector\";\r\n    import ElButtonMini from \"@/components/common/button/ElButtonMini\";\r\n    import TablePanel from \"@/components/layout-component/TablePanel\";\r\n\r\n    export default {\r\n        name: \"InventorySearchView\",\r\n        components: {TablePanel, ElButtonMini, WarehouseSelector, SearchCardLayout},\r\n        props: {},\r\n        data() {\r\n            return {\r\n                loading: false,\r\n                showAddDialog: false,\r\n                filterForm: new InventoryModel(),\r\n                data: [],\r\n                paginate: new PaginateModel(this.refreshData),\r\n                selectedRow: [],\r\n                sortingColumn: null,\r\n                editId: 0,\r\n            }\r\n        },\r\n        mounted() {\r\n            this.reload();\r\n        },\r\n        methods: {\r\n            reload() {\r\n                this.refreshData();\r\n            },\r\n            refreshData() {\r\n                this.loading = true;\r\n                this.$ajax.request(Api.inventory.list, {\r\n                    ...EcUtil.getSortField(this.sortingColumn),\r\n                    ...this.paginate.getJSON(),\r\n                    ...this.filterForm\r\n                }).then(resp => {\r\n                    this.data = resp.list;\r\n                    this.paginate.setPaginate(resp);\r\n                }).finally(() => this.loading = false)\r\n            },\r\n\r\n            sortChange(nodes) {\r\n                this.sortingColumn = nodes;\r\n                this.refreshData();\r\n            },\r\n\r\n            clickAddButton() {\r\n                this.editId = 0;\r\n                this.showAddDialog = true;\r\n            },\r\n            clickEditButton() {\r\n                this.editId = this.selectedRow[0].id;\r\n                this.showAddDialog = true;\r\n            },\r\n            clickDeleteButton() {\r\n                this.delete(this.selectedRow);\r\n            },\r\n            clickRowEditButton(row) {\r\n                this.editId = row.id;\r\n                this.showAddDialog = true;\r\n            },\r\n            clickRowDeleteButton(row) {\r\n                this.delete([row]);\r\n            },\r\n\r\n            warehouseChange(nodes) {\r\n                let l = nodes.length;\r\n                this.filterForm.warehouseId = l > 0 ? nodes[0] : 0;\r\n                this.filterForm.reservoirId = l > 1 ? nodes[1] : 0;\r\n                this.filterForm.stockId = l > 2 ? nodes[2] : 0;\r\n            }\r\n\r\n        },\r\n        watch: {},\r\n        computed: {},\r\n\r\n    }\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n    @import (reference) \"~style/all.less\";\r\n\r\n    .InventorySearchView {\r\n    }\r\n</style>"]}]}