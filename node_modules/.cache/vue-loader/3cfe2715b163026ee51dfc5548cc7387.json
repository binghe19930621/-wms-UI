{"remainingRequest":"E:\\项目\\SKWMS\\wms-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\项目\\SKWMS\\wms-ui\\src\\components\\common\\input\\DateTimeRangeInput.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\项目\\SKWMS\\wms-ui\\src\\components\\common\\input\\DateTimeRangeInput.vue","mtime":1585377528374},{"path":"E:\\项目\\SKWMS\\wms-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\项目\\SKWMS\\wms-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\项目\\SKWMS\\wms-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\项目\\SKWMS\\wms-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport DateTimeUtil from \"@/util/DateTimeUtil\";\n\nexport default {\n    name: \"DateTimeRangeInput\",\n    components: {},\n    props: {\n        startTime: {\n            default: '2019-01-01'\n        },\n        endTime: {\n            default: '2019-01-02'\n        },\n        width: {\n            default: '260px'\n        }\n    },\n    data() {\n        return {\n            pickerOptions: {\n                shortcuts: [{\n                    text: '最近一周',\n                    onClick(picker) {\n                        const end = new Date();\n                        const start = new Date();\n                        start.setTime(start.getTime() - 3600 * 1000 * 24 * 7);\n                        picker.$emit('pick', [start, '']);\n                    }\n                }, {\n                    text: '最近一个月',\n                    onClick(picker) {\n                        const end = new Date();\n                        const start = new Date();\n                        start.setTime(start.getTime() - 3600 * 1000 * 24 * 30);\n                        picker.$emit('pick', [start, '']);\n                    }\n                }, {\n                    text: '最近三个月',\n                    onClick(picker) {\n                        const end = new Date();\n                        const start = new Date();\n                        start.setTime(start.getTime() - 3600 * 1000 * 24 * 90);\n                        picker.$emit('pick', [start, '']);\n                    }\n                }],\n            },\n        }\n    },\n    mounted() {\n        this.reload();\n    },\n    methods: {\n        reload() {\n        },\n        change(v) {\n            if (!v || v.length < 2) {\n                this.$emit('update:start-time', '');\n                this.$emit('update:end-time', '');\n                return;\n            }\n            this.$emit('update:start-time', v[0] === '' ? '' : DateTimeUtil.dateFormat(v[0]));\n            this.$emit('update:end-time', v[1] === '' ? '' : DateTimeUtil.dateFormat(v[1]));\n        }\n    },\n    watch: {\n        startTime(v) {\n            \n        }\n    },\n    computed: {\n        dateRange() {\n            return [new Date(this.startTime), new Date(this.endTime)]\n        },\n        pickerStyle() {\n            return {\n                'width': this.width,\n            }\n        }\n    },\n\n}\n",{"version":3,"sources":["DateTimeRangeInput.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAiBA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"DateTimeRangeInput.vue","sourceRoot":"src/components/common/input","sourcesContent":["<template>\r\n    <div class=\"DateTimeRangeInput\">\r\n        <el-date-picker\r\n                :value=\"dateRange\"\r\n                @input=\"change\"\r\n                type=\"daterange\"\r\n                :picker-options=\"pickerOptions\"\r\n                range-separator=\"至\"\r\n                start-placeholder=\"开始日期\"\r\n                end-placeholder=\"结束日期\"\r\n                :style=\"pickerStyle\"\r\n                align=\"right\">\r\n        </el-date-picker>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import DateTimeUtil from \"@/util/DateTimeUtil\";\r\n\r\n    export default {\r\n        name: \"DateTimeRangeInput\",\r\n        components: {},\r\n        props: {\r\n            startTime: {\r\n                default: '2019-01-01'\r\n            },\r\n            endTime: {\r\n                default: '2019-01-02'\r\n            },\r\n            width: {\r\n                default: '260px'\r\n            }\r\n        },\r\n        data() {\r\n            return {\r\n                pickerOptions: {\r\n                    shortcuts: [{\r\n                        text: '最近一周',\r\n                        onClick(picker) {\r\n                            const end = new Date();\r\n                            const start = new Date();\r\n                            start.setTime(start.getTime() - 3600 * 1000 * 24 * 7);\r\n                            picker.$emit('pick', [start, '']);\r\n                        }\r\n                    }, {\r\n                        text: '最近一个月',\r\n                        onClick(picker) {\r\n                            const end = new Date();\r\n                            const start = new Date();\r\n                            start.setTime(start.getTime() - 3600 * 1000 * 24 * 30);\r\n                            picker.$emit('pick', [start, '']);\r\n                        }\r\n                    }, {\r\n                        text: '最近三个月',\r\n                        onClick(picker) {\r\n                            const end = new Date();\r\n                            const start = new Date();\r\n                            start.setTime(start.getTime() - 3600 * 1000 * 24 * 90);\r\n                            picker.$emit('pick', [start, '']);\r\n                        }\r\n                    }],\r\n                },\r\n            }\r\n        },\r\n        mounted() {\r\n            this.reload();\r\n        },\r\n        methods: {\r\n            reload() {\r\n            },\r\n            change(v) {\r\n                if (!v || v.length < 2) {\r\n                    this.$emit('update:start-time', '');\r\n                    this.$emit('update:end-time', '');\r\n                    return;\r\n                }\r\n                this.$emit('update:start-time', v[0] === '' ? '' : DateTimeUtil.dateFormat(v[0]));\r\n                this.$emit('update:end-time', v[1] === '' ? '' : DateTimeUtil.dateFormat(v[1]));\r\n            }\r\n        },\r\n        watch: {\r\n            startTime(v) {\r\n                \r\n            }\r\n        },\r\n        computed: {\r\n            dateRange() {\r\n                return [new Date(this.startTime), new Date(this.endTime)]\r\n            },\r\n            pickerStyle() {\r\n                return {\r\n                    'width': this.width,\r\n                }\r\n            }\r\n        },\r\n\r\n    }\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n    @import (reference) \"~style/all.less\";\r\n\r\n    .DateTimeRangeInput {\r\n    }\r\n</style>"]}]}