{"remainingRequest":"E:\\项目\\SKWMS\\wms-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\项目\\SKWMS\\wms-ui\\src\\components\\page-content\\enum-selector\\CompanySelector.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\项目\\SKWMS\\wms-ui\\src\\components\\page-content\\enum-selector\\CompanySelector.vue","mtime":1585370815944},{"path":"E:\\项目\\SKWMS\\wms-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\项目\\SKWMS\\wms-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\项目\\SKWMS\\wms-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\项目\\SKWMS\\wms-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Api from \"@/assets/api/Api\";\n\nexport default {\n    name: \"CompanySelector\",\n    components: {},\n    props: {\n        value: {\n            default: 0\n        },\n        isFilter: {\n            default: false\n        },\n        category: {\n            default: 0\n        },\n        placeholder: {\n            default: '请选择'\n        },\n        filterAllText: {\n            default: '全部'\n        }\n    },\n    data() {\n        return {\n            companies: [],\n            filterString: '',\n            pinyinMatch: require('pinyin-match')\n        }\n    },\n    mounted() {\n        this.reload();\n    },\n    methods: {\n        reload() {\n            this.refreshList();\n            this.change(0);\n        },\n        change(v) {\n            this.$emit('input', v);\n        },\n        refreshList() {\n            this.$ajax.request(Api.company.selectByCategory, {\n                category: this.category\n            }).then(resp => {\n                this.companies = resp;\n            })\n        },\n        filterMethod(a) {\n            this.filterString = a;\n        }\n    },\n    watch: {\n        type() {\n            this.refreshList();\n        }\n    },\n    computed: {\n        valueUse() {\n            if (this.value) {\n                return this.value;\n            }\n            return this.isFilter ? 0 : null;\n        },\n        companiesFilter() {\n            if (this.filterString === '') {\n                return this.companies;\n            }\n            return this.companies.filter(x => {\n                return this.pinyinMatch.match(x.name, this.filterString)\n            })\n        }\n    },\n\n}\n",{"version":3,"sources":["CompanySelector.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAoBA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"CompanySelector.vue","sourceRoot":"src/components/page-content/enum-selector","sourcesContent":["<template>\r\n    <div class=\"CompanySelector\">\r\n        <el-select\r\n                :value=\"valueUse\"\r\n                @input=\"change\"\r\n                filterable\r\n                :placeholder=\"placeholder\"\r\n                :filter-method=\"filterMethod\"\r\n        >\r\n            <el-option :label=\"filterAllText\" :value=\"0\" v-if=\"isFilter\"></el-option>\r\n            <el-option v-for=\"item in companiesFilter\"\r\n                       :key=\"item.id\"\r\n                       :label=\"item.name\"\r\n                       :value=\"item.id\"\r\n            ></el-option>\r\n        </el-select>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import Api from \"@/assets/api/Api\";\r\n\r\n    export default {\r\n        name: \"CompanySelector\",\r\n        components: {},\r\n        props: {\r\n            value: {\r\n                default: 0\r\n            },\r\n            isFilter: {\r\n                default: false\r\n            },\r\n            category: {\r\n                default: 0\r\n            },\r\n            placeholder: {\r\n                default: '请选择'\r\n            },\r\n            filterAllText: {\r\n                default: '全部'\r\n            }\r\n        },\r\n        data() {\r\n            return {\r\n                companies: [],\r\n                filterString: '',\r\n                pinyinMatch: require('pinyin-match')\r\n            }\r\n        },\r\n        mounted() {\r\n            this.reload();\r\n        },\r\n        methods: {\r\n            reload() {\r\n                this.refreshList();\r\n                this.change(0);\r\n            },\r\n            change(v) {\r\n                this.$emit('input', v);\r\n            },\r\n            refreshList() {\r\n                this.$ajax.request(Api.company.selectByCategory, {\r\n                    category: this.category\r\n                }).then(resp => {\r\n                    this.companies = resp;\r\n                })\r\n            },\r\n            filterMethod(a) {\r\n                this.filterString = a;\r\n            }\r\n        },\r\n        watch: {\r\n            type() {\r\n                this.refreshList();\r\n            }\r\n        },\r\n        computed: {\r\n            valueUse() {\r\n                if (this.value) {\r\n                    return this.value;\r\n                }\r\n                return this.isFilter ? 0 : null;\r\n            },\r\n            companiesFilter() {\r\n                if (this.filterString === '') {\r\n                    return this.companies;\r\n                }\r\n                return this.companies.filter(x => {\r\n                    return this.pinyinMatch.match(x.name, this.filterString)\r\n                })\r\n            }\r\n        },\r\n\r\n    }\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n    @import (reference) \"~style/all.less\";\r\n\r\n    .CompanySelector {\r\n    }\r\n</style>"]}]}