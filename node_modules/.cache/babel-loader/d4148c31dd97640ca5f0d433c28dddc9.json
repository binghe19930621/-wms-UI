{"remainingRequest":"E:\\项目\\SKWMS\\wms-ui\\node_modules\\babel-loader\\lib\\index.js!E:\\项目\\SKWMS\\wms-ui\\node_modules\\eslint-loader\\index.js??ref--13-0!E:\\项目\\SKWMS\\wms-ui\\src\\util\\EcUtil.js","dependencies":[{"path":"E:\\项目\\SKWMS\\wms-ui\\src\\util\\EcUtil.js","mtime":1585370816112},{"path":"E:\\项目\\SKWMS\\wms-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\项目\\SKWMS\\wms-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\项目\\SKWMS\\wms-ui\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _toConsumableArray from \"E:\\\\\\u9879\\u76EE\\\\SKWMS\\\\wms-ui\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/toConsumableArray\";\nimport \"core-js/modules/es6.regexp.split\";\nimport _Object$assign from \"E:\\\\\\u9879\\u76EE\\\\SKWMS\\\\wms-ui\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/object/assign\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport _typeof from \"E:\\\\\\u9879\\u76EE\\\\SKWMS\\\\wms-ui\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/typeof\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport StringUtil from \"@/util/StringUtil\";\nexport default {\n  /**\r\n   * url 合并\r\n   * 剔除最前和最后的 / 之后进行合并\r\n   * @param urls\r\n   * @returns {string}\r\n   */\n  urlMerge: function urlMerge() {\n    for (var _len = arguments.length, urls = new Array(_len), _key = 0; _key < _len; _key++) {\n      urls[_key] = arguments[_key];\n    }\n\n    return urls.map(function (x) {\n      return x.replace(/^\\/|\\/$/ig, '');\n    }).join('/');\n  },\n\n  /**\r\n   * ids 转换为字符串\r\n   * @param ids\r\n   * @returns {string|*}\r\n   */\n  idsFormat: function idsFormat(ids) {\n    if (_typeof(ids) === 'object') {\n      return ids.join(',');\n    }\n\n    return ids + '';\n  },\n\n  /**\r\n   * 当前运行环境是否为开发环境\r\n   * @returns {boolean}\r\n   */\n  isDevelopment: function isDevelopment() {\n    return process.env.NODE_ENV === 'development';\n  },\n\n  /**\r\n   * 将 ElementUI table 组件的 column 属性\r\n   * 转换成 排序格式字段\r\n   * @param column\r\n   * @param prefix\r\n   * @returns {{sortOrder: string, sortField: *}|{}}\r\n   */\n  getSortField: function getSortField(column) {\n    var prefix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n    if (!column || !column.column) return {};\n\n    if (prefix !== '') {\n      if (!column.prop.includes('.')) {\n        column.prop = prefix + '.' + column.prop;\n      }\n    }\n\n    return {\n      'sortField': StringUtil.toLine(column.prop),\n      'sortOrder': column.order === 'ascending' ? 'asc' : 'desc'\n    };\n  },\n\n  /**\r\n   * 初始化传递参数\r\n   * @param vue\r\n   */\n  initParams: function initParams(vue) {\n    vue.filterForm = _Object$assign(vue.filterForm, vue.params);\n    vue.$emit(\"update:params\", {});\n  },\n\n  /**\r\n   * 给数值添加都好\r\n   * @param number\r\n   * @param sp\r\n   * @param len\r\n   * @returns {string|...*|string}\r\n   */\n  numberDivide: function numberDivide(number) {\n    var sp = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : ',';\n    var len = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 3;\n    number += '';\n    var arr = number.split('.');\n\n    var zt = _toConsumableArray(arr[0]);\n\n    var zr = '';\n\n    for (var i = 0; i < zt.length; i++) {\n      if (i % len === 0 && i !== 0) {\n        zr = sp + zr;\n      }\n\n      zr = zt[zt.length - i - 1] + zr;\n    }\n\n    if (typeof arr[1] !== 'undefined' && arr[1].length > 0) {\n      zr += '.' + arr[1];\n    }\n\n    return zr;\n  }\n};",{"version":3,"sources":["E:\\项目\\SKWMS\\wms-ui\\src\\util\\EcUtil.js"],"names":["StringUtil","urlMerge","urls","map","x","replace","join","idsFormat","ids","isDevelopment","process","env","NODE_ENV","getSortField","column","prefix","prop","includes","toLine","order","initParams","vue","filterForm","params","$emit","numberDivide","number","sp","len","arr","split","zt","zr","i","length"],"mappings":";;;;;;;AAAA,OAAOA,UAAP,MAAuB,mBAAvB;AAEA,eAAe;AAEX;;;;;;AAMAC,EAAAA,QARW,sBAQO;AAAA,sCAANC,IAAM;AAANA,MAAAA,IAAM;AAAA;;AACd,WAAOA,IAAI,CAACC,GAAL,CAAS,UAAAC,CAAC;AAAA,aAAIA,CAAC,CAACC,OAAF,CAAU,WAAV,EAAuB,EAAvB,CAAJ;AAAA,KAAV,EAA0CC,IAA1C,CAA+C,GAA/C,CAAP;AACH,GAVU;;AAYX;;;;;AAKAC,EAAAA,SAjBW,qBAiBDC,GAjBC,EAiBI;AACX,QAAI,QAAOA,GAAP,MAAe,QAAnB,EAA6B;AACzB,aAAOA,GAAG,CAACF,IAAJ,CAAS,GAAT,CAAP;AACH;;AACD,WAAOE,GAAG,GAAG,EAAb;AACH,GAtBU;;AAwBX;;;;AAIAC,EAAAA,aA5BW,2BA4BK;AACZ,WAAOC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAAhC;AACH,GA9BU;;AAgCX;;;;;;;AAOAC,EAAAA,YAvCW,wBAuCEC,MAvCF,EAuCuB;AAAA,QAAbC,MAAa,uEAAJ,EAAI;AAC9B,QAAI,CAACD,MAAD,IAAW,CAACA,MAAM,CAACA,MAAvB,EAA+B,OAAO,EAAP;;AAC/B,QAAIC,MAAM,KAAK,EAAf,EAAmB;AACf,UAAI,CAACD,MAAM,CAACE,IAAP,CAAYC,QAAZ,CAAqB,GAArB,CAAL,EAAgC;AAC5BH,QAAAA,MAAM,CAACE,IAAP,GAAcD,MAAM,GAAG,GAAT,GAAeD,MAAM,CAACE,IAApC;AACH;AACJ;;AACD,WAAO;AACH,mBAAahB,UAAU,CAACkB,MAAX,CAAkBJ,MAAM,CAACE,IAAzB,CADV;AAEH,mBAAaF,MAAM,CAACK,KAAP,KAAiB,WAAjB,GAA+B,KAA/B,GAAuC;AAFjD,KAAP;AAIH,GAlDU;;AAoDX;;;;AAIAC,EAAAA,UAxDW,sBAwDAC,GAxDA,EAwDK;AACZA,IAAAA,GAAG,CAACC,UAAJ,GAAiB,eAAcD,GAAG,CAACC,UAAlB,EAA8BD,GAAG,CAACE,MAAlC,CAAjB;AACAF,IAAAA,GAAG,CAACG,KAAJ,CAAU,eAAV,EAA2B,EAA3B;AACH,GA3DU;;AA6DX;;;;;;;AAOAC,EAAAA,YApEW,wBAoEEC,MApEF,EAoE6B;AAAA,QAAnBC,EAAmB,uEAAd,GAAc;AAAA,QAATC,GAAS,uEAAH,CAAG;AACpCF,IAAAA,MAAM,IAAI,EAAV;AACA,QAAIG,GAAG,GAAGH,MAAM,CAACI,KAAP,CAAa,GAAb,CAAV;;AACA,QAAIC,EAAE,sBAAOF,GAAG,CAAC,CAAD,CAAV,CAAN;;AACA,QAAIG,EAAE,GAAG,EAAT;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,EAAE,CAACG,MAAvB,EAA+BD,CAAC,EAAhC,EAAoC;AAChC,UAAIA,CAAC,GAAGL,GAAJ,KAAY,CAAZ,IAAiBK,CAAC,KAAK,CAA3B,EAA8B;AAC1BD,QAAAA,EAAE,GAAGL,EAAE,GAAGK,EAAV;AACH;;AACDA,MAAAA,EAAE,GAAGD,EAAE,CAACA,EAAE,CAACG,MAAH,GAAYD,CAAZ,GAAgB,CAAjB,CAAF,GAAwBD,EAA7B;AACH;;AACD,QAAI,OAAOH,GAAG,CAAC,CAAD,CAAV,KAAkB,WAAlB,IAAiCA,GAAG,CAAC,CAAD,CAAH,CAAOK,MAAP,GAAgB,CAArD,EAAwD;AACpDF,MAAAA,EAAE,IAAI,MAAMH,GAAG,CAAC,CAAD,CAAf;AACH;;AACD,WAAOG,EAAP;AACH;AAnFU,CAAf","sourcesContent":["import StringUtil from \"@/util/StringUtil\";\r\n\r\nexport default {\r\n\r\n    /**\r\n     * url 合并\r\n     * 剔除最前和最后的 / 之后进行合并\r\n     * @param urls\r\n     * @returns {string}\r\n     */\r\n    urlMerge(...urls) {\r\n        return urls.map(x => x.replace(/^\\/|\\/$/ig, '')).join('/');\r\n    },\r\n\r\n    /**\r\n     * ids 转换为字符串\r\n     * @param ids\r\n     * @returns {string|*}\r\n     */\r\n    idsFormat(ids) {\r\n        if (typeof ids === 'object') {\r\n            return ids.join(',');\r\n        }\r\n        return ids + '';\r\n    },\r\n\r\n    /**\r\n     * 当前运行环境是否为开发环境\r\n     * @returns {boolean}\r\n     */\r\n    isDevelopment() {\r\n        return process.env.NODE_ENV === 'development';\r\n    },\r\n\r\n    /**\r\n     * 将 ElementUI table 组件的 column 属性\r\n     * 转换成 排序格式字段\r\n     * @param column\r\n     * @param prefix\r\n     * @returns {{sortOrder: string, sortField: *}|{}}\r\n     */\r\n    getSortField(column, prefix = '') {\r\n        if (!column || !column.column) return {};\r\n        if (prefix !== '') {\r\n            if (!column.prop.includes('.')) {\r\n                column.prop = prefix + '.' + column.prop;\r\n            }\r\n        }\r\n        return {\r\n            'sortField': StringUtil.toLine(column.prop),\r\n            'sortOrder': column.order === 'ascending' ? 'asc' : 'desc'\r\n        }\r\n    },\r\n\r\n    /**\r\n     * 初始化传递参数\r\n     * @param vue\r\n     */\r\n    initParams(vue) {\r\n        vue.filterForm = Object.assign(vue.filterForm, vue.params);\r\n        vue.$emit(\"update:params\", {})\r\n    },\r\n\r\n    /**\r\n     * 给数值添加都好\r\n     * @param number\r\n     * @param sp\r\n     * @param len\r\n     * @returns {string|...*|string}\r\n     */\r\n    numberDivide(number, sp = ',', len = 3) {\r\n        number += '';\r\n        let arr = number.split('.');\r\n        let zt = [...arr[0]];\r\n        let zr = '';\r\n        for (let i = 0; i < zt.length; i++) {\r\n            if (i % len === 0 && i !== 0) {\r\n                zr = sp + zr;\r\n            }\r\n            zr = zt[zt.length - i - 1] + zr;\r\n        }\r\n        if (typeof arr[1] !== 'undefined' && arr[1].length > 0) {\r\n            zr += '.' + arr[1];\r\n        }\r\n        return zr;\r\n    }\r\n\r\n}"]}]}