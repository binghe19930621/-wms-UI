{"remainingRequest":"E:\\项目\\SKWMS\\wms-ui\\node_modules\\babel-loader\\lib\\index.js!E:\\项目\\SKWMS\\wms-ui\\node_modules\\eslint-loader\\index.js??ref--13-0!E:\\项目\\SKWMS\\wms-ui\\src\\util\\RouterUtil.js","dependencies":[{"path":"E:\\项目\\SKWMS\\wms-ui\\src\\util\\RouterUtil.js","mtime":1585370816119},{"path":"E:\\项目\\SKWMS\\wms-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\项目\\SKWMS\\wms-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\项目\\SKWMS\\wms-ui\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _Object$assign from \"E:\\\\\\u9879\\u76EE\\\\SKWMS\\\\wms-ui\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/object/assign\";\nimport VueUtil from \"@/util/VueUtil\";\nimport UrlUtil from \"@/util/UrlUtil\";\nimport CollectionUtil from \"@/util/CollectionUtil\";\nimport aside_menu from \"@/router/aside_menu\";\nimport ObjectUtil from \"@/util/ObjectUtil\";\nimport Windows from \"@/project/var/Windows\";\nexport default {\n  /**\r\n   * 原始跳转方法映射\r\n   * 接受 vue-router 的默认 route 阐述\r\n   * {\r\n   *     path : '/index' ,\r\n   *     query: {\r\n              var1: yes\r\n          }\r\n   * }\r\n   * @param route\r\n   */\n  toRoute: function toRoute(route) {\n    VueUtil.getVue().$router.push(route);\n  },\n\n  /**\r\n   * 跳转到 path 路径\r\n   * @param path  路径\r\n   * @param query 参数\r\n   */\n  toPath: function toPath(path) {\n    var query = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    this.toRoute({\n      path: path,\n      query: query\n    });\n  },\n\n  /**\r\n   * 跳转函数\r\n   * 自动分辨传入参数是否为原生参数还是字符串路径\r\n   * 根据不同参数类型执行 toRoute 或 toPath\r\n   * @param to    跳转路径 path 或 原生路由\r\n   * @param params    参数\r\n   */\n  to: function to(_to) {\n    var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    if (typeof _to === 'string') {\n      this.toPath(_to, params);\n    } else {\n      this.toRoute(_to);\n    }\n  },\n\n  /**\r\n   * 设置 hash 参数\r\n   * @param params\r\n   */\n  setHash: function setHash() {\n    var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var nowHash = UrlUtil.hash();\n    nowHash = _Object$assign(nowHash, params);\n    location.hash = UrlUtil.toHashString(nowHash, false);\n  },\n\n  /**\r\n   * 设置 query 参数\r\n   * 用于翻页浏览器地址保存\r\n   * @param params\r\n   */\n  setQuery: function setQuery() {\n    var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var nowQuery = UrlUtil.query();\n    nowQuery = _Object$assign(nowQuery, params);\n    location.query = UrlUtil.toQueryString(nowQuery);\n  },\n\n  /**\r\n   * 跳转到登录界面\r\n   * @param query\r\n   */\n  toLogin: function toLogin() {\n    var query = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    this.toRoute({\n      path: '/Login',\n      query: query\n    });\n  },\n\n  /**\r\n   * 跳转到后台\r\n   * @param query\r\n   */\n  toBack: function toBack() {\n    var query = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    this.toRoute({\n      path: '/Back',\n      query: query\n    });\n  },\n  toWindow: function toWindow(path) {\n    var query = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var route = CollectionUtil.findDeep(aside_menu, function (x) {\n      return x.path === path;\n    });\n    route.params = query;\n    Windows.set(route);\n  }\n};",{"version":3,"sources":["E:\\项目\\SKWMS\\wms-ui\\src\\util\\RouterUtil.js"],"names":["VueUtil","UrlUtil","CollectionUtil","aside_menu","ObjectUtil","Windows","toRoute","route","getVue","$router","push","toPath","path","query","to","params","setHash","nowHash","hash","location","toHashString","setQuery","nowQuery","toQueryString","toLogin","toBack","toWindow","findDeep","x","set"],"mappings":";AAAA,OAAOA,OAAP,MAAoB,gBAApB;AACA,OAAOC,OAAP,MAAoB,gBAApB;AACA,OAAOC,cAAP,MAA2B,uBAA3B;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,OAAOC,UAAP,MAAuB,mBAAvB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AAEA,eAAe;AAEX;;;;;;;;;;;AAWAC,EAAAA,OAbW,mBAaHC,KAbG,EAaI;AACXP,IAAAA,OAAO,CAACQ,MAAR,GAAiBC,OAAjB,CAAyBC,IAAzB,CAA8BH,KAA9B;AACH,GAfU;;AAiBX;;;;;AAKAI,EAAAA,MAtBW,kBAsBJC,IAtBI,EAsBc;AAAA,QAAZC,KAAY,uEAAJ,EAAI;AACrB,SAAKP,OAAL,CAAa;AACTM,MAAAA,IAAI,EAAEA,IADG;AAETC,MAAAA,KAAK,EAAEA;AAFE,KAAb;AAIH,GA3BU;;AA6BX;;;;;;;AAOAC,EAAAA,EApCW,cAoCRA,GApCQ,EAoCS;AAAA,QAAbC,MAAa,uEAAJ,EAAI;;AAChB,QAAI,OAAOD,GAAP,KAAc,QAAlB,EAA4B;AACxB,WAAKH,MAAL,CAAYG,GAAZ,EAAgBC,MAAhB;AACH,KAFD,MAEO;AACH,WAAKT,OAAL,CAAaQ,GAAb;AACH;AACJ,GA1CU;;AA4CX;;;;AAIAE,EAAAA,OAhDW,qBAgDU;AAAA,QAAbD,MAAa,uEAAJ,EAAI;AACjB,QAAIE,OAAO,GAAGhB,OAAO,CAACiB,IAAR,EAAd;AACAD,IAAAA,OAAO,GAAG,eAAcA,OAAd,EAAuBF,MAAvB,CAAV;AACAI,IAAAA,QAAQ,CAACD,IAAT,GAAgBjB,OAAO,CAACmB,YAAR,CAAqBH,OAArB,EAA8B,KAA9B,CAAhB;AACH,GApDU;;AAsDX;;;;;AAKAI,EAAAA,QA3DW,sBA2DW;AAAA,QAAbN,MAAa,uEAAJ,EAAI;AAClB,QAAIO,QAAQ,GAAGrB,OAAO,CAACY,KAAR,EAAf;AACAS,IAAAA,QAAQ,GAAG,eAAcA,QAAd,EAAwBP,MAAxB,CAAX;AACAI,IAAAA,QAAQ,CAACN,KAAT,GAAiBZ,OAAO,CAACsB,aAAR,CAAsBD,QAAtB,CAAjB;AACH,GA/DU;;AAiEX;;;;AAIAE,EAAAA,OArEW,qBAqES;AAAA,QAAZX,KAAY,uEAAJ,EAAI;AAChB,SAAKP,OAAL,CAAa;AACTM,MAAAA,IAAI,EAAE,QADG;AAETC,MAAAA,KAAK,EAAEA;AAFE,KAAb;AAIH,GA1EU;;AA2EX;;;;AAIAY,EAAAA,MA/EW,oBA+EQ;AAAA,QAAZZ,KAAY,uEAAJ,EAAI;AACf,SAAKP,OAAL,CAAa;AACTM,MAAAA,IAAI,EAAE,OADG;AAETC,MAAAA,KAAK,EAAEA;AAFE,KAAb;AAIH,GApFU;AAsFXa,EAAAA,QAtFW,oBAsFFd,IAtFE,EAsFgB;AAAA,QAAZC,KAAY,uEAAJ,EAAI;AACvB,QAAIN,KAAK,GAAGL,cAAc,CAACyB,QAAf,CAAwBxB,UAAxB,EAAoC,UAAAyB,CAAC;AAAA,aAAIA,CAAC,CAAChB,IAAF,KAAWA,IAAf;AAAA,KAArC,CAAZ;AACAL,IAAAA,KAAK,CAACQ,MAAN,GAAeF,KAAf;AACAR,IAAAA,OAAO,CAACwB,GAAR,CAAYtB,KAAZ;AACH;AA1FU,CAAf","sourcesContent":["import VueUtil from \"@/util/VueUtil\";\r\nimport UrlUtil from \"@/util/UrlUtil\";\r\nimport CollectionUtil from \"@/util/CollectionUtil\";\r\nimport aside_menu from \"@/router/aside_menu\";\r\nimport ObjectUtil from \"@/util/ObjectUtil\";\r\nimport Windows from \"@/project/var/Windows\";\r\n\r\nexport default {\r\n\r\n    /**\r\n     * 原始跳转方法映射\r\n     * 接受 vue-router 的默认 route 阐述\r\n     * {\r\n     *     path : '/index' ,\r\n     *     query: {\r\n                var1: yes\r\n            }\r\n     * }\r\n     * @param route\r\n     */\r\n    toRoute(route) {\r\n        VueUtil.getVue().$router.push(route)\r\n    },\r\n\r\n    /**\r\n     * 跳转到 path 路径\r\n     * @param path  路径\r\n     * @param query 参数\r\n     */\r\n    toPath(path, query = {}) {\r\n        this.toRoute({\r\n            path: path,\r\n            query: query\r\n        })\r\n    },\r\n\r\n    /**\r\n     * 跳转函数\r\n     * 自动分辨传入参数是否为原生参数还是字符串路径\r\n     * 根据不同参数类型执行 toRoute 或 toPath\r\n     * @param to    跳转路径 path 或 原生路由\r\n     * @param params    参数\r\n     */\r\n    to(to, params = {}) {\r\n        if (typeof to === 'string') {\r\n            this.toPath(to, params);\r\n        } else {\r\n            this.toRoute(to);\r\n        }\r\n    },\r\n\r\n    /**\r\n     * 设置 hash 参数\r\n     * @param params\r\n     */\r\n    setHash(params = {}) {\r\n        let nowHash = UrlUtil.hash();\r\n        nowHash = Object.assign(nowHash, params);\r\n        location.hash = UrlUtil.toHashString(nowHash, false);\r\n    },\r\n\r\n    /**\r\n     * 设置 query 参数\r\n     * 用于翻页浏览器地址保存\r\n     * @param params\r\n     */\r\n    setQuery(params = {}) {\r\n        let nowQuery = UrlUtil.query();\r\n        nowQuery = Object.assign(nowQuery, params);\r\n        location.query = UrlUtil.toQueryString(nowQuery);\r\n    },\r\n\r\n    /**\r\n     * 跳转到登录界面\r\n     * @param query\r\n     */\r\n    toLogin(query = {}) {\r\n        this.toRoute({\r\n            path: '/Login',\r\n            query: query\r\n        })\r\n    },\r\n    /**\r\n     * 跳转到后台\r\n     * @param query\r\n     */\r\n    toBack(query = {}) {\r\n        this.toRoute({\r\n            path: '/Back',\r\n            query: query\r\n        })\r\n    },\r\n\r\n    toWindow(path, query = {}) {\r\n        let route = CollectionUtil.findDeep(aside_menu, x => x.path === path);\r\n        route.params = query;\r\n        Windows.set(route);\r\n    }\r\n}"]}]}