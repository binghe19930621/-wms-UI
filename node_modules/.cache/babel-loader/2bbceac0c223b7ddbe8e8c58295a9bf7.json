{"remainingRequest":"E:\\项目\\SKWMS\\wms-ui\\node_modules\\babel-loader\\lib\\index.js!E:\\项目\\SKWMS\\wms-ui\\node_modules\\eslint-loader\\index.js??ref--13-0!E:\\项目\\SKWMS\\wms-ui\\src\\project\\model\\PaginateModel.js","dependencies":[{"path":"E:\\项目\\SKWMS\\wms-ui\\src\\project\\model\\PaginateModel.js","mtime":1585370816047},{"path":"E:\\项目\\SKWMS\\wms-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\项目\\SKWMS\\wms-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\项目\\SKWMS\\wms-ui\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _classCallCheck from \"E:\\\\\\u9879\\u76EE\\\\SKWMS\\\\wms-ui\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\\\u9879\\u76EE\\\\SKWMS\\\\wms-ui\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/createClass\";\nimport _defineProperty from \"E:\\\\\\u9879\\u76EE\\\\SKWMS\\\\wms-ui\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/defineProperty\";\n\nvar PaginateModel =\n/*#__PURE__*/\nfunction () {\n  /**\r\n   * 构造器\r\n   * 可直接传入页面参数变更回调函数\r\n   * @param changeCallBack\r\n   * @param pageSize\r\n   */\n  function PaginateModel() {\n    var changeCallBack = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    var pageSize = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 14;\n\n    _classCallCheck(this, PaginateModel);\n\n    _defineProperty(this, \"lastPage\", 1);\n\n    _defineProperty(this, \"pageNum\", 0);\n\n    _defineProperty(this, \"pageSize\", 0);\n\n    _defineProperty(this, \"size\", 0);\n\n    _defineProperty(this, \"total\", 0);\n\n    _defineProperty(this, \"startRow\", 0);\n\n    _defineProperty(this, \"perPageShow\", 0);\n\n    if (changeCallBack) {\n      this.changeCallBack = function () {\n        changeCallBack();\n      };\n    }\n\n    this.pageSize = pageSize;\n    this.perPageShow = pageSize;\n  }\n  /**\r\n   * 设置当前页为下一页\r\n   * @param page\r\n   */\n\n\n  _createClass(PaginateModel, [{\n    key: \"next\",\n    value: function next() {\n      var page = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n      this.jump(page || this.pageNum + 1);\n    }\n    /**\r\n     * 跳转到某一页\r\n     * @param page\r\n     */\n\n  }, {\n    key: \"jump\",\n    value: function jump(page) {\n      this.pageNum = page > this.lastPage ? this.lastPage : page;\n    }\n    /**\r\n     * 跳转到最后一页\r\n     */\n\n  }, {\n    key: \"jumpToLast\",\n    value: function jumpToLast() {\n      this.pageNum = this.lastPage;\n    }\n    /**\r\n     * 将 ajax 获取到的分页信息注入 模型中\r\n     * @param resp\r\n     */\n\n  }, {\n    key: \"setPaginate\",\n    value: function setPaginate(resp) {\n      this.lastPage = resp.lastPage;\n      this.pageNum = resp.pageNum;\n      this.pageSize = resp.pageSize;\n      this.size = resp.size;\n      this.startRow = resp.startRow;\n      this.total = resp.total;\n    }\n    /**\r\n     * 转换成 JSON 格式提交\r\n     * @returns {{pageSize: number, pageNum: number}}\r\n     */\n\n  }, {\n    key: \"getJSON\",\n    value: function getJSON() {\n      return {\n        pageNum: this.pageNum,\n        pageSize: this.pageSize\n      };\n    }\n    /**\r\n     * 改变当前页触发函数\r\n     */\n\n  }, {\n    key: \"changePageCallBack\",\n    value: function changePageCallBack() {}\n    /**\r\n     * 改变显示数量出发函数\r\n     */\n\n  }, {\n    key: \"changeSizeCallBack\",\n    value: function changeSizeCallBack() {}\n    /**\r\n     * 改变当前页 和 改变显示数量均会执行\r\n     */\n\n  }, {\n    key: \"changeCallBack\",\n    value: function changeCallBack() {}\n  }]);\n\n  return PaginateModel;\n}();\n\nexport { PaginateModel as default };",{"version":3,"sources":["E:\\项目\\SKWMS\\wms-ui\\src\\project\\model\\PaginateModel.js"],"names":["PaginateModel","changeCallBack","pageSize","perPageShow","page","jump","pageNum","lastPage","resp","size","startRow","total"],"mappings":";;;;IAAqBA,a;;;AASjB;;;;;;AAMA,2BAAkD;AAAA,QAAtCC,cAAsC,uEAArB,IAAqB;AAAA,QAAfC,QAAe,uEAAJ,EAAI;;AAAA;;AAAA,sCAdvC,CAcuC;;AAAA,qCAbxC,CAawC;;AAAA,sCAZvC,CAYuC;;AAAA,kCAX3C,CAW2C;;AAAA,mCAV1C,CAU0C;;AAAA,sCATvC,CASuC;;AAAA,yCARpC,CAQoC;;AAC9C,QAAID,cAAJ,EAAoB;AAChB,WAAKA,cAAL,GAAsB,YAAM;AACxBA,QAAAA,cAAc;AACjB,OAFD;AAGH;;AACD,SAAKC,QAAL,GAAgBA,QAAhB;AACA,SAAKC,WAAL,GAAmBD,QAAnB;AACH;AAGD;;;;;;;;2BAIkB;AAAA,UAAbE,IAAa,uEAAN,IAAM;AACd,WAAKC,IAAL,CAAUD,IAAI,IAAI,KAAKE,OAAL,GAAe,CAAjC;AACH;AAED;;;;;;;yBAIKF,I,EAAM;AACP,WAAKE,OAAL,GAAeF,IAAI,GAAG,KAAKG,QAAZ,GAAuB,KAAKA,QAA5B,GAAuCH,IAAtD;AACH;AAED;;;;;;iCAGa;AACT,WAAKE,OAAL,GAAe,KAAKC,QAApB;AACH;AAED;;;;;;;gCAIYC,I,EAAM;AACd,WAAKD,QAAL,GAAgBC,IAAI,CAACD,QAArB;AACA,WAAKD,OAAL,GAAeE,IAAI,CAACF,OAApB;AACA,WAAKJ,QAAL,GAAgBM,IAAI,CAACN,QAArB;AACA,WAAKO,IAAL,GAAYD,IAAI,CAACC,IAAjB;AACA,WAAKC,QAAL,GAAgBF,IAAI,CAACE,QAArB;AACA,WAAKC,KAAL,GAAaH,IAAI,CAACG,KAAlB;AACH;AAED;;;;;;;8BAIU;AACN,aAAO;AACHL,QAAAA,OAAO,EAAE,KAAKA,OADX;AAEHJ,QAAAA,QAAQ,EAAE,KAAKA;AAFZ,OAAP;AAIH;AAED;;;;;;yCAGqB,CACpB;AAED;;;;;;yCAGqB,CACpB;AAED;;;;;;qCAGiB,CAChB;;;;;;SAzFgBF,a","sourcesContent":["export default class PaginateModel {\r\n    lastPage = 1;\r\n    pageNum = 0;\r\n    pageSize = 0;\r\n    size = 0;\r\n    total = 0;\r\n    startRow = 0;\r\n    perPageShow = 0;\r\n\r\n    /**\r\n     * 构造器\r\n     * 可直接传入页面参数变更回调函数\r\n     * @param changeCallBack\r\n     * @param pageSize\r\n     */\r\n    constructor(changeCallBack = null, pageSize = 14) {\r\n        if (changeCallBack) {\r\n            this.changeCallBack = () => {\r\n                changeCallBack();\r\n            };\r\n        }\r\n        this.pageSize = pageSize;\r\n        this.perPageShow = pageSize;\r\n    }\r\n\r\n\r\n    /**\r\n     * 设置当前页为下一页\r\n     * @param page\r\n     */\r\n    next(page = null) {\r\n        this.jump(page || this.pageNum + 1);\r\n    }\r\n\r\n    /**\r\n     * 跳转到某一页\r\n     * @param page\r\n     */\r\n    jump(page) {\r\n        this.pageNum = page > this.lastPage ? this.lastPage : page;\r\n    }\r\n\r\n    /**\r\n     * 跳转到最后一页\r\n     */\r\n    jumpToLast() {\r\n        this.pageNum = this.lastPage;\r\n    }\r\n\r\n    /**\r\n     * 将 ajax 获取到的分页信息注入 模型中\r\n     * @param resp\r\n     */\r\n    setPaginate(resp) {\r\n        this.lastPage = resp.lastPage;\r\n        this.pageNum = resp.pageNum;\r\n        this.pageSize = resp.pageSize;\r\n        this.size = resp.size;\r\n        this.startRow = resp.startRow;\r\n        this.total = resp.total;\r\n    }\r\n\r\n    /**\r\n     * 转换成 JSON 格式提交\r\n     * @returns {{pageSize: number, pageNum: number}}\r\n     */\r\n    getJSON() {\r\n        return {\r\n            pageNum: this.pageNum,\r\n            pageSize: this.pageSize\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 改变当前页触发函数\r\n     */\r\n    changePageCallBack() {\r\n    }\r\n\r\n    /**\r\n     * 改变显示数量出发函数\r\n     */\r\n    changeSizeCallBack() {\r\n    }\r\n\r\n    /**\r\n     * 改变当前页 和 改变显示数量均会执行\r\n     */\r\n    changeCallBack() {\r\n    }\r\n\r\n}"]}]}