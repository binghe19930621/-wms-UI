{"remainingRequest":"E:\\项目\\SKWMS\\wms-ui\\node_modules\\babel-loader\\lib\\index.js!E:\\项目\\SKWMS\\wms-ui\\node_modules\\eslint-loader\\index.js??ref--13-0!E:\\项目\\SKWMS\\wms-ui\\src\\util\\DebThrUtil.js","dependencies":[{"path":"E:\\项目\\SKWMS\\wms-ui\\src\\util\\DebThrUtil.js","mtime":1585370816110},{"path":"E:\\项目\\SKWMS\\wms-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\项目\\SKWMS\\wms-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\项目\\SKWMS\\wms-ui\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["/**\r\n * 防抖动 和 节流阀 功能\r\n */\nexport default {\n  /**\r\n   * 默认节流和防抖动延迟时间\r\n   */\n  _defDelay: 100,\n\n  /**\r\n   * 节流阀缓存\r\n   */\n  _thrKey: {},\n\n  /**\r\n   * 防抖动缓存\r\n   */\n  _debKey: {},\n\n  /**\r\n   * 仅执行一次\r\n   */\n  _onceKey: {},\n\n  /**\r\n   * 一次性执行完成不再执行\r\n   * @param key\r\n   * @param callback\r\n   */\n  once: function once(key, callback) {\n    if (this._onceKey[key]) return;\n    this._onceKey[key] = true;\n    callback && callback();\n  },\n\n  /**\r\n   * 节流阀\r\n   * @param key\r\n   * @param callback\r\n   * @param delay\r\n   */\n  throttle: function throttle(key, callback) {\n    var _this = this;\n\n    var delay = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this._defDelay;\n    if (this._thrKey[key]) return;\n    this._thrKey[key] = true;\n    callback && callback();\n    setTimeout(function () {\n      _this._thrKey[key] = false;\n    }, delay);\n  },\n\n  /**\r\n   * 防抖动\r\n   * @param key\r\n   * @param callback\r\n   * @param delay\r\n   */\n  debounce: function debounce(key, callback) {\n    var delay = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this._defDelay + 1;\n    if (this._debKey[key]) clearTimeout(this._debKey[key]);\n    this._debKey[key] = setTimeout(function () {\n      callback && callback();\n    }, delay);\n  },\n\n  /**\r\n   * 节流阀与防抖动一起使用\r\n   * @param key\r\n   * @param func\r\n   * @param delay\r\n   */\n  thrAndDeb: function thrAndDeb(key, func, delay) {\n    delay = delay === null ? 100 : delay;\n    this.throttle(key, func, delay);\n    this.debounce(key, func, delay);\n  },\n\n  /**\r\n   * 节流阀 函数表达式返回\r\n   * @param func  函数\r\n   * @param delay 节流延迟\r\n   * @returns {Function}\r\n   */\n  throttleFunction: function throttleFunction(func) {\n    var delay = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this._defDelay;\n    var isValid = true;\n    return function () {\n      if (!isValid) return;\n      isValid = false;\n      func && func.apply(void 0, arguments);\n      setTimeout(function () {\n        isValid = true;\n      }, delay);\n    };\n  },\n\n  /**\r\n   * 防抖动 函数表达式返回\r\n   * @param func  函数\r\n   * @param delay 防抖延迟\r\n   * @returns {Function}\r\n   */\n  debounceFuntion: function debounceFuntion(func) {\n    var delay = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this._defDelay + 1;\n    var timer;\n    return function () {\n      for (var _len = arguments.length, params = new Array(_len), _key = 0; _key < _len; _key++) {\n        params[_key] = arguments[_key];\n      }\n\n      clearTimeout(timer);\n      timer = setTimeout(function () {\n        func && func.apply(void 0, params);\n      }, delay);\n    };\n  },\n\n  /**\r\n   * 节流阀和防抖动函数表达式返回\r\n   * @param func      函数\r\n   * @param delayThrottle 节流延迟\r\n   * @param delayDebounce 防抖延迟\r\n   * @returns {Function}\r\n   */\n  thrAndDebFuntion: function thrAndDebFuntion(func) {\n    var delayThrottle = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    var delayDebounce = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n    var throttleFunc = this.throttle(func, delayThrottle);\n    var debounceFunc = this.debounce(func, delayDebounce);\n    return function () {\n      throttleFunc.apply(void 0, arguments);\n      debounceFunc.apply(void 0, arguments);\n    };\n  }\n};",{"version":3,"sources":["E:\\项目\\SKWMS\\wms-ui\\src\\util\\DebThrUtil.js"],"names":["_defDelay","_thrKey","_debKey","_onceKey","once","key","callback","throttle","delay","setTimeout","debounce","clearTimeout","thrAndDeb","func","throttleFunction","isValid","debounceFuntion","timer","params","thrAndDebFuntion","delayThrottle","delayDebounce","throttleFunc","debounceFunc"],"mappings":"AAAA;;;AAGA,eAAe;AACX;;;AAGAA,EAAAA,SAAS,EAAE,GAJA;;AAKX;;;AAGAC,EAAAA,OAAO,EAAE,EARE;;AASX;;;AAGAC,EAAAA,OAAO,EAAE,EAZE;;AAaX;;;AAGAC,EAAAA,QAAQ,EAAE,EAhBC;;AAkBX;;;;;AAKAC,EAAAA,IAvBW,gBAuBNC,GAvBM,EAuBDC,QAvBC,EAuBS;AAChB,QAAI,KAAKH,QAAL,CAAcE,GAAd,CAAJ,EAAwB;AACxB,SAAKF,QAAL,CAAcE,GAAd,IAAqB,IAArB;AACAC,IAAAA,QAAQ,IAAIA,QAAQ,EAApB;AACH,GA3BU;;AA4BX;;;;;;AAMAC,EAAAA,QAlCW,oBAkCFF,GAlCE,EAkCGC,QAlCH,EAkCqC;AAAA;;AAAA,QAAxBE,KAAwB,uEAAhB,KAAKR,SAAW;AAC5C,QAAI,KAAKC,OAAL,CAAaI,GAAb,CAAJ,EAAuB;AACvB,SAAKJ,OAAL,CAAaI,GAAb,IAAoB,IAApB;AACAC,IAAAA,QAAQ,IAAIA,QAAQ,EAApB;AACAG,IAAAA,UAAU,CAAC,YAAM;AACb,MAAA,KAAI,CAACR,OAAL,CAAaI,GAAb,IAAoB,KAApB;AACH,KAFS,EAEPG,KAFO,CAAV;AAGH,GAzCU;;AA2CX;;;;;;AAMAE,EAAAA,QAjDW,oBAiDFL,GAjDE,EAiDGC,QAjDH,EAiDyC;AAAA,QAA5BE,KAA4B,uEAApB,KAAKR,SAAL,GAAiB,CAAG;AAChD,QAAI,KAAKE,OAAL,CAAaG,GAAb,CAAJ,EAAuBM,YAAY,CAAC,KAAKT,OAAL,CAAaG,GAAb,CAAD,CAAZ;AACvB,SAAKH,OAAL,CAAaG,GAAb,IAAoBI,UAAU,CAAC,YAAM;AACjCH,MAAAA,QAAQ,IAAIA,QAAQ,EAApB;AACH,KAF6B,EAE3BE,KAF2B,CAA9B;AAGH,GAtDU;;AAwDX;;;;;;AAMAI,EAAAA,SA9DW,qBA8DDP,GA9DC,EA8DIQ,IA9DJ,EA8DUL,KA9DV,EA8DiB;AACxBA,IAAAA,KAAK,GAAGA,KAAK,KAAK,IAAV,GAAiB,GAAjB,GAAuBA,KAA/B;AACA,SAAKD,QAAL,CAAcF,GAAd,EAAmBQ,IAAnB,EAAyBL,KAAzB;AACA,SAAKE,QAAL,CAAcL,GAAd,EAAmBQ,IAAnB,EAAyBL,KAAzB;AACH,GAlEU;;AAoEX;;;;;;AAMAM,EAAAA,gBA1EW,4BA0EMD,IA1EN,EA0EoC;AAAA,QAAxBL,KAAwB,uEAAhB,KAAKR,SAAW;AAC3C,QAAIe,OAAO,GAAG,IAAd;AACA,WAAO,YAAe;AAClB,UAAI,CAACA,OAAL,EAAc;AACdA,MAAAA,OAAO,GAAG,KAAV;AACAF,MAAAA,IAAI,IAAIA,IAAI,MAAJ,mBAAR;AACAJ,MAAAA,UAAU,CAAC,YAAM;AACbM,QAAAA,OAAO,GAAG,IAAV;AACH,OAFS,EAEPP,KAFO,CAAV;AAGH,KAPD;AAQH,GApFU;;AAqFX;;;;;;AAMAQ,EAAAA,eA3FW,2BA2FKH,IA3FL,EA2FuC;AAAA,QAA5BL,KAA4B,uEAApB,KAAKR,SAAL,GAAiB,CAAG;AAC9C,QAAIiB,KAAJ;AACA,WAAO,YAAe;AAAA,wCAAXC,MAAW;AAAXA,QAAAA,MAAW;AAAA;;AAClBP,MAAAA,YAAY,CAACM,KAAD,CAAZ;AACAA,MAAAA,KAAK,GAAGR,UAAU,CAAC,YAAM;AACrBI,QAAAA,IAAI,IAAIA,IAAI,MAAJ,SAAQK,MAAR,CAAR;AACH,OAFiB,EAEfV,KAFe,CAAlB;AAGH,KALD;AAMH,GAnGU;;AAoGX;;;;;;;AAOAW,EAAAA,gBA3GW,4BA2GMN,IA3GN,EA2GwD;AAAA,QAA5CO,aAA4C,uEAA5B,IAA4B;AAAA,QAAtBC,aAAsB,uEAAN,IAAM;AAC/D,QAAIC,YAAY,GAAG,KAAKf,QAAL,CAAcM,IAAd,EAAoBO,aAApB,CAAnB;AACA,QAAIG,YAAY,GAAG,KAAKb,QAAL,CAAcG,IAAd,EAAoBQ,aAApB,CAAnB;AACA,WAAO,YAAe;AAClBC,MAAAA,YAAY,MAAZ;AACAC,MAAAA,YAAY,MAAZ;AACH,KAHD;AAIH;AAlHU,CAAf","sourcesContent":["/**\r\n * 防抖动 和 节流阀 功能\r\n */\r\nexport default {\r\n    /**\r\n     * 默认节流和防抖动延迟时间\r\n     */\r\n    _defDelay: 100,\r\n    /**\r\n     * 节流阀缓存\r\n     */\r\n    _thrKey: {},\r\n    /**\r\n     * 防抖动缓存\r\n     */\r\n    _debKey: {},\r\n    /**\r\n     * 仅执行一次\r\n     */\r\n    _onceKey: {},\r\n\r\n    /**\r\n     * 一次性执行完成不再执行\r\n     * @param key\r\n     * @param callback\r\n     */\r\n    once(key, callback) {\r\n        if (this._onceKey[key]) return;\r\n        this._onceKey[key] = true;\r\n        callback && callback();\r\n    },\r\n    /**\r\n     * 节流阀\r\n     * @param key\r\n     * @param callback\r\n     * @param delay\r\n     */\r\n    throttle(key, callback, delay = this._defDelay) {\r\n        if (this._thrKey[key]) return;\r\n        this._thrKey[key] = true;\r\n        callback && callback();\r\n        setTimeout(() => {\r\n            this._thrKey[key] = false;\r\n        }, delay);\r\n    },\r\n\r\n    /**\r\n     * 防抖动\r\n     * @param key\r\n     * @param callback\r\n     * @param delay\r\n     */\r\n    debounce(key, callback, delay = this._defDelay + 1) {\r\n        if (this._debKey[key]) clearTimeout(this._debKey[key]);\r\n        this._debKey[key] = setTimeout(() => {\r\n            callback && callback();\r\n        }, delay);\r\n    },\r\n\r\n    /**\r\n     * 节流阀与防抖动一起使用\r\n     * @param key\r\n     * @param func\r\n     * @param delay\r\n     */\r\n    thrAndDeb(key, func, delay) {\r\n        delay = delay === null ? 100 : delay;\r\n        this.throttle(key, func, delay);\r\n        this.debounce(key, func, delay);\r\n    },\r\n\r\n    /**\r\n     * 节流阀 函数表达式返回\r\n     * @param func  函数\r\n     * @param delay 节流延迟\r\n     * @returns {Function}\r\n     */\r\n    throttleFunction(func, delay = this._defDelay) {\r\n        let isValid = true;\r\n        return (...params) => {\r\n            if (!isValid) return;\r\n            isValid = false;\r\n            func && func(...params);\r\n            setTimeout(() => {\r\n                isValid = true;\r\n            }, delay);\r\n        };\r\n    },\r\n    /**\r\n     * 防抖动 函数表达式返回\r\n     * @param func  函数\r\n     * @param delay 防抖延迟\r\n     * @returns {Function}\r\n     */\r\n    debounceFuntion(func, delay = this._defDelay + 1) {\r\n        let timer;\r\n        return (...params) => {\r\n            clearTimeout(timer);\r\n            timer = setTimeout(() => {\r\n                func && func(...params);\r\n            }, delay);\r\n        }\r\n    },\r\n    /**\r\n     * 节流阀和防抖动函数表达式返回\r\n     * @param func      函数\r\n     * @param delayThrottle 节流延迟\r\n     * @param delayDebounce 防抖延迟\r\n     * @returns {Function}\r\n     */\r\n    thrAndDebFuntion(func, delayThrottle = null, delayDebounce = null) {\r\n        let throttleFunc = this.throttle(func, delayThrottle);\r\n        let debounceFunc = this.debounce(func, delayDebounce);\r\n        return (...params) => {\r\n            throttleFunc(...params);\r\n            debounceFunc(...params);\r\n        }\r\n    },\r\n}"]}]}