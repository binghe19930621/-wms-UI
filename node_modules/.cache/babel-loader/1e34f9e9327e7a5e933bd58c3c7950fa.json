{"remainingRequest":"E:\\项目\\SKWMS\\wms-ui\\node_modules\\babel-loader\\lib\\index.js!E:\\项目\\SKWMS\\wms-ui\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\项目\\SKWMS\\wms-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\项目\\SKWMS\\wms-ui\\src\\components\\layout-component\\HeaderNav.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\项目\\SKWMS\\wms-ui\\src\\components\\layout-component\\HeaderNav.vue","mtime":1585370815917},{"path":"E:\\项目\\SKWMS\\wms-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\项目\\SKWMS\\wms-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\项目\\SKWMS\\wms-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\项目\\SKWMS\\wms-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport ElButtonMini from \"@/components/common/button/ElButtonMini\";\nimport StatesContainer from \"@/project/StatesContainer\";\nimport RouterUtil from \"@/util/RouterUtil\";\nimport UserHandle from \"@/project/user/UserHandle\";\nimport Api from \"@/assets/api/Api\";\nimport DialogUtil from \"@/util/DialogUtil\";\nimport MyInfoEditDialog from \"@/components/common/dialog/MyInfoEditDialog\";\nimport Windows from \"@/project/var/Windows\";\nexport default {\n  name: \"HeaderNav\",\n  components: {\n    MyInfoEditDialog: MyInfoEditDialog,\n    ElButtonMini: ElButtonMini\n  },\n  props: {},\n  data: function data() {\n    return {\n      states: StatesContainer,\n      user: UserHandle.getLoginUser(),\n      showEditMyInfoDialog: false\n    };\n  },\n  mounted: function mounted() {\n    this.reload();\n  },\n  activated: function activated() {},\n  methods: {\n    reload: function reload() {},\n    clickMenuArrow: function clickMenuArrow() {\n      this.$store.commit('setAsideIsExpend', !this.$store.state.asideIsExpend);\n    },\n    clickErrorButton: function clickErrorButton() {\n      this.states.layout.errorWindowVisible = true;\n    },\n    logout: function logout() {\n      var _this = this;\n\n      DialogUtil.confirm(\"确定退出登录？\").then(function () {\n        return _this.$ajax.request(Api.user.logout);\n      }).then(function (resp) {\n        Windows.clearWindow();\n        DialogUtil.toastSuccess(resp);\n        RouterUtil.toLogin();\n      });\n    }\n  },\n  watch: {},\n  computed: {\n    menuArrowClass: function menuArrowClass() {\n      return {\n        'arrow-right': !this.$store.state.asideIsExpend\n      };\n    }\n  }\n};",{"version":3,"sources":["HeaderNav.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwCA,OAAA,YAAA,MAAA,yCAAA;AACA,OAAA,eAAA,MAAA,2BAAA;AACA,OAAA,UAAA,MAAA,mBAAA;AACA,OAAA,UAAA,MAAA,2BAAA;AACA,OAAA,GAAA,MAAA,kBAAA;AACA,OAAA,UAAA,MAAA,mBAAA;AACA,OAAA,gBAAA,MAAA,6CAAA;AACA,OAAA,OAAA,MAAA,uBAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,WADA;AAEA,EAAA,UAAA,EAAA;AAAA,IAAA,gBAAA,EAAA,gBAAA;AAAA,IAAA,YAAA,EAAA;AAAA,GAFA;AAGA,EAAA,KAAA,EAAA,EAHA;AAIA,EAAA,IAJA,kBAIA;AACA,WAAA;AACA,MAAA,MAAA,EAAA,eADA;AAEA,MAAA,IAAA,EAAA,UAAA,CAAA,YAAA,EAFA;AAGA,MAAA,oBAAA,EAAA;AAHA,KAAA;AAKA,GAVA;AAWA,EAAA,OAXA,qBAWA;AACA,SAAA,MAAA;AACA,GAbA;AAcA,EAAA,SAdA,uBAcA,CACA,CAfA;AAgBA,EAAA,OAAA,EAAA;AACA,IAAA,MADA,oBACA,CACA,CAFA;AAGA,IAAA,cAHA,4BAGA;AACA,WAAA,MAAA,CAAA,MAAA,CAAA,kBAAA,EAAA,CAAA,KAAA,MAAA,CAAA,KAAA,CAAA,aAAA;AACA,KALA;AAMA,IAAA,gBANA,8BAMA;AACA,WAAA,MAAA,CAAA,MAAA,CAAA,kBAAA,GAAA,IAAA;AACA,KARA;AASA,IAAA,MATA,oBASA;AAAA;;AACA,MAAA,UAAA,CAAA,OAAA,CAAA,SAAA,EAAA,IAAA,CAAA,YAAA;AACA,eAAA,KAAA,CAAA,KAAA,CAAA,OAAA,CAAA,GAAA,CAAA,IAAA,CAAA,MAAA,CAAA;AACA,OAFA,EAEA,IAFA,CAEA,UAAA,IAAA,EAAA;AACA,QAAA,OAAA,CAAA,WAAA;AACA,QAAA,UAAA,CAAA,YAAA,CAAA,IAAA;AACA,QAAA,UAAA,CAAA,OAAA;AACA,OANA;AAOA;AAjBA,GAhBA;AAmCA,EAAA,KAAA,EAAA,EAnCA;AAoCA,EAAA,QAAA,EAAA;AACA,IAAA,cADA,4BACA;AACA,aAAA;AACA,uBAAA,CAAA,KAAA,MAAA,CAAA,KAAA,CAAA;AADA,OAAA;AAGA;AALA;AApCA,CAAA","sourcesContent":["<template>\r\n    <div class=\"HeaderNav flex-box flex-center h100p lh-1 pl-md pr-md bg-white\">\r\n        <div class=\"pr-sm color-navy\"\r\n        >\r\n            <i class=\"iconfont icon-arrow-left cursor-p disp-ib trans\"\r\n               :class=\"menuArrowClass\"\r\n               @click=\"clickMenuArrow\"\r\n            ></i>\r\n        </div>\r\n        <div class=\"fz-sm\">\r\n            <el-button circle type=\"danger\" icon=\"iconfont icon-lightbulb\" title=\"最近发生的错误\"\r\n                       @click.native=\"clickErrorButton\"\r\n                       v-if=\"user.isRoot === 1\"\r\n            ></el-button>\r\n        </div>\r\n        <div class=\"flex-grow\"></div>\r\n        <div class=\"fz-xs mr-sm\">\r\n            你好，\r\n            <span class=\"cursor-p\"\r\n                  style=\"text-decoration: underline\"\r\n                  @click=\"showEditMyInfoDialog = true\"\r\n            >\r\n                {{ user.realName }} ( {{ user.userName }} )\r\n            </span>。\r\n        </div>\r\n        <div class=\"fz-xs\">\r\n            <el-button-mini\r\n                    type=\"text\"\r\n                    icon=\"iconfont icon-sign-out-alt\"\r\n                    @click.native=\"logout\"\r\n            ><span class=\"color-black\">退出登录</span>\r\n            </el-button-mini>\r\n        </div>\r\n        <my-info-edit-dialog\r\n                :visible.sync=\"showEditMyInfoDialog\"\r\n        ></my-info-edit-dialog>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import ElButtonMini from \"@/components/common/button/ElButtonMini\";\r\n    import StatesContainer from \"@/project/StatesContainer\";\r\n    import RouterUtil from \"@/util/RouterUtil\";\r\n    import UserHandle from \"@/project/user/UserHandle\";\r\n    import Api from \"@/assets/api/Api\";\r\n    import DialogUtil from \"@/util/DialogUtil\";\r\n    import MyInfoEditDialog from \"@/components/common/dialog/MyInfoEditDialog\";\r\n    import Windows from \"@/project/var/Windows\";\r\n\r\n    export default {\r\n        name: \"HeaderNav\",\r\n        components: {MyInfoEditDialog, ElButtonMini},\r\n        props: {},\r\n        data() {\r\n            return {\r\n                states: StatesContainer,\r\n                user: UserHandle.getLoginUser(),\r\n                showEditMyInfoDialog: false\r\n            }\r\n        },\r\n        mounted() {\r\n            this.reload();\r\n        },\r\n        activated() {\r\n        },\r\n        methods: {\r\n            reload() {\r\n            },\r\n            clickMenuArrow() {\r\n                this.$store.commit('setAsideIsExpend', !this.$store.state.asideIsExpend);\r\n            },\r\n            clickErrorButton() {\r\n                this.states.layout.errorWindowVisible = true;\r\n            },\r\n            logout() {\r\n                DialogUtil.confirm(\"确定退出登录？\").then(() => {\r\n                    return this.$ajax.request(Api.user.logout);\r\n                }).then(resp => {\r\n                    Windows.clearWindow();\r\n                    DialogUtil.toastSuccess(resp);\r\n                    RouterUtil.toLogin();\r\n                })\r\n            }\r\n        },\r\n        watch: {},\r\n        computed: {\r\n            menuArrowClass() {\r\n                return {\r\n                    'arrow-right': !this.$store.state.asideIsExpend\r\n                }\r\n            }\r\n        },\r\n    }\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n    @import (reference) \"~@/style/all.less\";\r\n\r\n    .HeaderNav {\r\n        .arrow-right {\r\n            transform: rotateY(180deg);\r\n        }\r\n    }\r\n</style>"],"sourceRoot":"src/components/layout-component"}]}