{"remainingRequest":"E:\\项目\\SKWMS\\wms-ui\\node_modules\\babel-loader\\lib\\index.js!E:\\项目\\SKWMS\\wms-ui\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\项目\\SKWMS\\wms-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\项目\\SKWMS\\wms-ui\\src\\components\\page-content\\enum-selector\\WarehouseSelector.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\项目\\SKWMS\\wms-ui\\src\\components\\page-content\\enum-selector\\WarehouseSelector.vue","mtime":1585370815949},{"path":"E:\\项目\\SKWMS\\wms-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\项目\\SKWMS\\wms-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\项目\\SKWMS\\wms-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\项目\\SKWMS\\wms-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Api from \"@/assets/api/Api\";\nimport CollectionUtil from \"@/util/CollectionUtil\";\nexport default {\n  name: \"WarehouseSelector\",\n  components: {},\n  props: {\n    value: {\n      default: 0\n    },\n    isFilter: {\n      default: false\n    },\n    level: {\n      default: 1\n    },\n    visible: {\n      default: true\n    },\n    width: {\n      default: '200px'\n    },\n    filterIds: {\n      default: function _default() {\n        return [];\n      }\n    },\n    needFilter: {\n      default: false\n    }\n  },\n  data: function data() {\n    return {\n      warehouses: [],\n      reservoirs: [],\n      stocks: [],\n      tree: [],\n      selectArray: []\n    };\n  },\n  mounted: function mounted() {\n    this.reload();\n  },\n  methods: {\n    reload: function reload() {\n      this.refreshList();\n      this.change(this.isFilter ? 0 : null);\n    },\n    change: function change(v) {\n      this.$emit('input', v);\n    },\n    refreshList: function refreshList() {\n      var _this = this;\n\n      this.$ajax.request(Api.warehouse.warSelectAll).then(function (resp) {\n        _this.warehouses = resp;\n\n        if (_this.level > 1) {\n          return _this.$ajax.request(Api.warehouse.resSelectAll);\n        }\n      }).then(function (resp) {\n        _this.reservoirs = resp;\n\n        if (_this.level > 2) {\n          return _this.$ajax.request(Api.warehouse.stockSelectAll);\n        }\n      }).then(function (resp) {\n        _this.stocks = resp;\n      }).finally(function () {\n        return _this.createTree();\n      });\n    },\n    createTree: function createTree() {\n      var _this2 = this;\n\n      this.tree = CollectionUtil.listToTreeByTwoList(this.warehouses, CollectionUtil.listToTreeByTwoList(this.reservoirs, this.stocks, 'reservoirId'), 'warehouseId');\n\n      if (this.isFilter) {\n        this.tree = [{\n          id: 0,\n          name: '全部'\n        }].concat(this.tree);\n      } else if (this.needFilter || this.filterIds.length) {\n        this.tree = CollectionUtil.filterTree(this.tree, function (x) {\n          return _this2.filterIds.includes(x.id);\n        }, 'children', 3);\n      }\n\n      this.refreshSelect();\n    },\n    refreshSelect: function refreshSelect() {\n      var _this3 = this;\n\n      this.selectArray = CollectionUtil.getTreeRoute(this.tree, function (x) {\n        return x.id === _this3.value;\n      }, 'id', 'children', this.level);\n    },\n    itemChange: function itemChange(nodes) {\n      if (!this.isFilter && nodes.length < this.level) return;\n      this.$emit('input', nodes.length !== this.level ? 0 : nodes[nodes.length - 1]);\n      this.$emit('change', nodes);\n    }\n  },\n  watch: {\n    visible: function visible(v) {\n      if (v) {\n        this.refreshList();\n      }\n    },\n    value: function value() {\n      this.refreshSelect();\n    },\n    filterIds: function filterIds() {\n      this.createTree();\n    }\n  },\n  computed: {\n    valueUse: function valueUse() {\n      if (this.value) {\n        return this.value;\n      }\n\n      return this.isFilter ? 0 : null;\n    },\n    plcText: function plcText() {\n      return '请选择' + ['仓库', '仓位', '货架'][this.level - 1];\n    }\n  }\n};",{"version":3,"sources":["WarehouseSelector.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n    <div class=\"WarehouseSelector\">\r\n        <el-cascader\r\n                :style=\"{'width' : width}\"\r\n                :value=\"selectArray\"\r\n                :placeholder=\" isFilter? '全部' : plcText\"\r\n                :options=\"tree\"\r\n                :props=\"{value:'id', label: 'name'}\"\r\n                @change=\"itemChange\"\r\n                :change-on-select=\"isFilter\"\r\n        ></el-cascader>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import Api from \"@/assets/api/Api\";\r\n    import CollectionUtil from \"@/util/CollectionUtil\";\r\n\r\n    export default {\r\n        name: \"WarehouseSelector\",\r\n        components: {},\r\n        props: {\r\n            value: {\r\n                default: 0\r\n            },\r\n            isFilter: {\r\n                default: false\r\n            },\r\n            level: {\r\n                default: 1\r\n            },\r\n            visible: {\r\n                default: true\r\n            },\r\n            width: {\r\n                default: '200px'\r\n            },\r\n            filterIds: {\r\n                default() {\r\n                    return [];\r\n                }\r\n            },\r\n            needFilter: {\r\n                default :false\r\n            }\r\n        },\r\n        data() {\r\n            return {\r\n                warehouses: [],\r\n                reservoirs: [],\r\n                stocks: [],\r\n                tree: [],\r\n                selectArray: []\r\n            }\r\n        },\r\n        mounted() {\r\n            this.reload();\r\n        },\r\n        methods: {\r\n            reload() {\r\n                this.refreshList();\r\n                this.change(this.isFilter ? 0 : null);\r\n            },\r\n            change(v) {\r\n                this.$emit('input', v);\r\n            },\r\n            refreshList() {\r\n                this.$ajax.request(Api.warehouse.warSelectAll).then(resp => {\r\n                    this.warehouses = resp;\r\n                    if (this.level > 1) {\r\n                        return this.$ajax.request(Api.warehouse.resSelectAll);\r\n                    }\r\n                }).then(resp => {\r\n                    this.reservoirs = resp;\r\n                    if (this.level > 2) {\r\n                        return this.$ajax.request(Api.warehouse.stockSelectAll);\r\n                    }\r\n                }).then(resp => {\r\n                    this.stocks = resp;\r\n                }).finally(() => this.createTree())\r\n            },\r\n\r\n            createTree() {\r\n                this.tree = CollectionUtil.listToTreeByTwoList(\r\n                    this.warehouses,\r\n                    CollectionUtil.listToTreeByTwoList(this.reservoirs, this.stocks, 'reservoirId'),\r\n                    'warehouseId'\r\n                );\r\n                if (this.isFilter) {\r\n                    this.tree = [{\r\n                        id: 0,\r\n                        name: '全部'\r\n                    }].concat(this.tree);\r\n                } else if ( this.needFilter || this.filterIds.length) {\r\n                    this.tree = CollectionUtil.filterTree(this.tree, x => this.filterIds.includes(x.id), 'children', 3);\r\n                }\r\n                this.refreshSelect();\r\n            },\r\n\r\n            refreshSelect() {\r\n                this.selectArray = CollectionUtil.getTreeRoute(this.tree, x => x.id === this.value, 'id', 'children', this.level);\r\n            },\r\n\r\n            itemChange(nodes) {\r\n                if ( !this.isFilter && nodes.length < this.level) return;\r\n                this.$emit('input', nodes.length !== this.level ? 0 : nodes[nodes.length - 1]);\r\n                this.$emit('change', nodes);\r\n            }\r\n\r\n        },\r\n        watch: {\r\n            visible(v) {\r\n                if (v) {\r\n                    this.refreshList();\r\n                }\r\n            },\r\n            value() {\r\n                this.refreshSelect();\r\n            },\r\n            filterIds() {\r\n                this.createTree();\r\n            }\r\n        },\r\n        computed: {\r\n            valueUse() {\r\n                if (this.value) {\r\n                    return this.value;\r\n                }\r\n                return this.isFilter ? 0 : null;\r\n            },\r\n            plcText() {\r\n                return '请选择' + ['仓库', '仓位', '货架'][this.level - 1]\r\n            }\r\n        },\r\n\r\n    }\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n    @import (reference) \"~style/all.less\";\r\n\r\n    .WarehouseSelector {\r\n    }\r\n</style>"],"sourceRoot":"src/components/page-content/enum-selector"}]}