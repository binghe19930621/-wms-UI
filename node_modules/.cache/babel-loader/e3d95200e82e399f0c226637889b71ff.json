{"remainingRequest":"E:\\项目\\SKWMS\\wms-ui\\node_modules\\babel-loader\\lib\\index.js!E:\\项目\\SKWMS\\wms-ui\\node_modules\\eslint-loader\\index.js??ref--13-0!E:\\项目\\SKWMS\\wms-ui\\src\\util\\CacheUtil.js","dependencies":[{"path":"E:\\项目\\SKWMS\\wms-ui\\src\\util\\CacheUtil.js","mtime":1585370816107},{"path":"E:\\项目\\SKWMS\\wms-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\项目\\SKWMS\\wms-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\项目\\SKWMS\\wms-ui\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _JSON$stringify from \"E:\\\\\\u9879\\u76EE\\\\SKWMS\\\\wms-ui\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/json/stringify\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.regexp.match\";\nimport NumberUtil from \"./NumberUtil\";\n/**\r\n * 浏览器缓存写入\r\n * 采用 localStorage 接口开发\r\n */\n\nexport default {\n  /**\r\n   * 缓存键值前缀\r\n   */\n  cachePrefix: 'cache_app_h5',\n\n  /**\r\n   * 缓存过期时间键值前缀\r\n   */\n  cacheExpPrefix: 'cache_exp_app_h5',\n\n  /**\r\n   * 缓存持续时间前缀\r\n   */\n  cacheDurPrefix: 'cache_dur_app_h5',\n  tList: {\n    'ms': 1,\n    's': 1000,\n    'h': 3600 * 1000,\n    'd': 3600 * 24 * 1000\n  },\n\n  /**\r\n   * 获取 key\r\n   * @param key\r\n   * @returns {string}\r\n   */\n  getKey: function getKey(key) {\n    return this.cachePrefix + key;\n  },\n\n  /**\r\n   * 获取 过期时间 key\r\n   * @param key\r\n   * @returns {string}\r\n   */\n  getKeyExp: function getKeyExp(key) {\n    return this.cacheExpPrefix + key;\n  },\n\n  /**\r\n   * 获取 持续时间 key\r\n   * @param key\r\n   * @returns {string}\r\n   */\n  getDurExp: function getDurExp(key) {\n    return this.cacheDurPrefix + key;\n  },\n\n  /**\r\n   * 获取缓存中的内容\r\n   * 检查是否存在\r\n   * 存在是否过期\r\n   * 过期则删除缓存内容\r\n   * @param key   需要获取的缓存 key\r\n   * @param def   默认返回（不存在或过期返回内容）\r\n   * @returns {*}\r\n   */\n  get: function get(key) {\n    var def = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    var expTime = this.getLocalStorage(this.getKeyExp(key));\n\n    if (!NumberUtil.isNumber(expTime)) {\n      return def;\n    }\n\n    expTime = NumberUtil.strToNumber(expTime);\n\n    if (expTime === 0 || expTime >= new Date().getTime()) {\n      return this.getLocalStorage(this.getKey(key));\n    }\n\n    return def;\n  },\n  getDelay: function getDelay(key) {\n    var def = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    var v = this.get(key, def);\n\n    if (v !== null) {\n      this.setExpTime(key, this.getLocalStorage(this.getDurExp(key)));\n    }\n\n    return v;\n  },\n\n  /**\r\n   * 设置一个缓存\r\n   * 是否存在\r\n   * 存在覆盖、不存在新增\r\n   * @param key   键值\r\n   * @param value 内容\r\n   * @param exp   过期时间\r\n   */\n  set: function set(key, value) {\n    var exp = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n    this.setLocaleStorage(this.getKey(key), value);\n\n    if (exp === 0) {\n      this.setLocaleStorage(this.getKeyExp(key), 0);\n    } else {\n      this.setExpTime(key, exp);\n    }\n  },\n\n  /**\r\n   * 设置过期时间\r\n   * @param key\r\n   * @param exp\r\n   */\n  setExpTime: function setExpTime(key) {\n    var exp = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    var expTime = this.getExpTime(exp);\n    this.setLocaleStorage(this.getKeyExp(key), expTime + new Date().getTime());\n    this.setLocaleStorage(this.getDurExp(key), this.getExpTime(exp));\n  },\n\n  /**\r\n   * 获取过期时间\r\n   * 将字符串时间表达转换成毫秒值\r\n   * @param exp   时间（ 2000 : 2000毫秒 | '6s' : 6秒 | '3h' : 3小时 | '2d' : 2天 )\r\n   * @returns {number}\r\n   */\n  getExpTime: function getExpTime() {\n    var exp = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    var ts = 'h';\n    var ep = 0;\n\n    try {\n      exp = eval(exp);\n    } catch (e) {}\n\n    if (typeof exp === 'string') {\n      exp = exp.toLowerCase();\n      ts = exp.match(/[a-z]+$/ig)[0];\n      ep = eval(exp.replace(/[a-z]+$/ig, ''));\n    } else {\n      ep = exp;\n    }\n\n    return ep * this.tList[ts];\n  },\n\n  /**\r\n   * 移除缓存\r\n   * 同时移除 内容，过期时间，持续时间\r\n   * @param key\r\n   */\n  remove: function remove(key) {\n    this.removeLocaleStorage(this.getKey(key));\n    this.removeLocaleStorage(this.getKeyExp(key));\n    this.removeLocaleStorage(this.getDurExp(key));\n  },\n\n  /**\r\n   * 移除缓存\r\n   * @param key\r\n   */\n  removeLocaleStorage: function removeLocaleStorage(key) {\n    return window.localStorage.removeItem(key);\n  },\n\n  /**\r\n   * 设置缓存\r\n   * 长久有效缓存\r\n   * @param key\r\n   * @param value\r\n   */\n  setLocaleStorage: function setLocaleStorage(key, value) {\n    return window.localStorage.setItem(key, _JSON$stringify(value));\n  },\n\n  /**\r\n   * 获取缓存\r\n   * @param key\r\n   * @returns {*}\r\n   */\n  getLocalStorage: function getLocalStorage(key) {\n    var v = window.localStorage.getItem(key);\n\n    try {\n      return JSON.parse(v);\n    } catch (e) {\n      return v;\n    }\n  }\n};",{"version":3,"sources":["E:\\项目\\SKWMS\\wms-ui\\src\\util\\CacheUtil.js"],"names":["NumberUtil","cachePrefix","cacheExpPrefix","cacheDurPrefix","tList","getKey","key","getKeyExp","getDurExp","get","def","expTime","getLocalStorage","isNumber","strToNumber","Date","getTime","getDelay","v","setExpTime","set","value","exp","setLocaleStorage","getExpTime","ts","ep","eval","e","toLowerCase","match","replace","remove","removeLocaleStorage","window","localStorage","removeItem","setItem","getItem","JSON","parse"],"mappings":"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","sourcesContent":["import NumberUtil from \"./NumberUtil\";\r\n\r\n/**\r\n * 浏览器缓存写入\r\n * 采用 localStorage 接口开发\r\n */\r\nexport default {\r\n\r\n    /**\r\n     * 缓存键值前缀\r\n     */\r\n    cachePrefix: 'cache_app_h5',\r\n    /**\r\n     * 缓存过期时间键值前缀\r\n     */\r\n    cacheExpPrefix: 'cache_exp_app_h5',\r\n    /**\r\n     * 缓存持续时间前缀\r\n     */\r\n    cacheDurPrefix: 'cache_dur_app_h5',\r\n    tList: {\r\n        'ms': 1,\r\n        's': 1000,\r\n        'h': 3600 * 1000,\r\n        'd': 3600 * 24 * 1000,\r\n    },\r\n    /**\r\n     * 获取 key\r\n     * @param key\r\n     * @returns {string}\r\n     */\r\n    getKey(key) {\r\n        return this.cachePrefix + key;\r\n    },\r\n    /**\r\n     * 获取 过期时间 key\r\n     * @param key\r\n     * @returns {string}\r\n     */\r\n    getKeyExp(key) {\r\n        return this.cacheExpPrefix + key;\r\n    },\r\n    /**\r\n     * 获取 持续时间 key\r\n     * @param key\r\n     * @returns {string}\r\n     */\r\n    getDurExp(key) {\r\n        return this.cacheDurPrefix + key;\r\n    },\r\n\r\n    /**\r\n     * 获取缓存中的内容\r\n     * 检查是否存在\r\n     * 存在是否过期\r\n     * 过期则删除缓存内容\r\n     * @param key   需要获取的缓存 key\r\n     * @param def   默认返回（不存在或过期返回内容）\r\n     * @returns {*}\r\n     */\r\n    get(key, def = null) {\r\n        let expTime = this.getLocalStorage(this.getKeyExp(key));\r\n        if (!NumberUtil.isNumber(expTime)) {\r\n            return def;\r\n        }\r\n        expTime = NumberUtil.strToNumber(expTime);\r\n        if (expTime === 0 || expTime >= new Date().getTime()) {\r\n            return this.getLocalStorage(this.getKey(key));\r\n        }\r\n        return def;\r\n    },\r\n\r\n    getDelay(key, def = null) {\r\n        let v = this.get(key, def);\r\n        if (v !== null) {\r\n            this.setExpTime(key, this.getLocalStorage(this.getDurExp(key)));\r\n        }\r\n        return v;\r\n    },\r\n    /**\r\n     * 设置一个缓存\r\n     * 是否存在\r\n     * 存在覆盖、不存在新增\r\n     * @param key   键值\r\n     * @param value 内容\r\n     * @param exp   过期时间\r\n     */\r\n    set(key, value, exp = 0) {\r\n        this.setLocaleStorage(this.getKey(key), value);\r\n        if (exp === 0) {\r\n            this.setLocaleStorage(this.getKeyExp(key), 0);\r\n        } else {\r\n            this.setExpTime(key, exp);\r\n        }\r\n    },\r\n    /**\r\n     * 设置过期时间\r\n     * @param key\r\n     * @param exp\r\n     */\r\n    setExpTime(key, exp = 0) {\r\n        let expTime = this.getExpTime(exp);\r\n        this.setLocaleStorage(this.getKeyExp(key), expTime + new Date().getTime());\r\n        this.setLocaleStorage(this.getDurExp(key), this.getExpTime(exp));\r\n    },\r\n\r\n    /**\r\n     * 获取过期时间\r\n     * 将字符串时间表达转换成毫秒值\r\n     * @param exp   时间（ 2000 : 2000毫秒 | '6s' : 6秒 | '3h' : 3小时 | '2d' : 2天 )\r\n     * @returns {number}\r\n     */\r\n    getExpTime(exp = 0) {\r\n        let ts = 'h';\r\n        let ep = 0;\r\n        try {\r\n            exp = eval(exp);\r\n        } catch (e) {\r\n        }\r\n        if (typeof exp === 'string') {\r\n            exp = exp.toLowerCase();\r\n            ts = exp.match(/[a-z]+$/ig)[0];\r\n            ep = eval(exp.replace(/[a-z]+$/ig, ''));\r\n        } else {\r\n            ep = exp;\r\n        }\r\n        return ep * this.tList[ts];\r\n    },\r\n    /**\r\n     * 移除缓存\r\n     * 同时移除 内容，过期时间，持续时间\r\n     * @param key\r\n     */\r\n    remove(key) {\r\n        this.removeLocaleStorage(this.getKey(key));\r\n        this.removeLocaleStorage(this.getKeyExp(key));\r\n        this.removeLocaleStorage(this.getDurExp(key));\r\n    },\r\n    /**\r\n     * 移除缓存\r\n     * @param key\r\n     */\r\n    removeLocaleStorage(key) {\r\n        return window.localStorage.removeItem(key);\r\n    },\r\n    /**\r\n     * 设置缓存\r\n     * 长久有效缓存\r\n     * @param key\r\n     * @param value\r\n     */\r\n    setLocaleStorage(key, value) {\r\n        return window.localStorage.setItem(key, JSON.stringify(value));\r\n    },\r\n    /**\r\n     * 获取缓存\r\n     * @param key\r\n     * @returns {*}\r\n     */\r\n    getLocalStorage(key) {\r\n        let v = window.localStorage.getItem(key);\r\n        try {\r\n            return JSON.parse(v);\r\n        } catch (e) {\r\n            return v;\r\n        }\r\n    }\r\n\r\n}\r\n"]}]}